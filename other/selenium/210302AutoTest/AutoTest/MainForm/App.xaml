<Application x:Class="MainForm.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Application.Resources>
        <Style x:Key="window" TargetType="Window">
            <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            <Setter Property="Icon" Value="logo.ico" />
        </Style>
        <Style x:Key="modalWindow" TargetType="Window" BasedOn="{StaticResource window}">
            <Setter Property="ShowInTaskbar" Value="False"/>
            <Setter Property="ResizeMode" Value="NoResize"/>
        </Style>
        <Style x:Key="button" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="20"/>
        </Style>
        <Style x:Key="dataGridCellText" TargetType="TextBlock">
            <Setter Property="Margin" Value="4" />
        </Style>
        <Style x:Key="dataGridEditingCellText" TargetType="TextBox">
            <Setter Property="Padding" Value="1,3" />
        </Style>
        <Style x:Key="dataGridHeader" TargetType="DataGridColumnHeader">
            <Setter Property="Foreground" Value="Gray"/>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
            <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource dataGridHeader}" />
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="Padding" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEditing" Value="True">
                    <Setter Property="Background" Value="White"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="toobarImage" TargetType="Image">
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height"  Value="16"/>
            <Setter Property="Margin"  Value="2"/>
        </Style>
        <Style TargetType="ToolBarTray">
            <Setter Property="Height" Value="30"/>
        </Style>
        <Style TargetType="Button" x:Key="toolBarButton">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.3" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="MinWidth" Value="50"/>
        </Style>
        <LinearGradientBrush x:Key="tabNormalBackground">
            <GradientStop Color="Blue" Offset="0.5" />
            <GradientStop Color="White" Offset="1.0" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="tabSelectedBackground">
            <GradientStop Color="Blue" Offset="0.5" />
            <GradientStop Color="White" Offset="1.0" />
        </LinearGradientBrush>
        <Style x:Key="tabButton" TargetType="RadioButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Border Name="Border" Cursor="Hand" Background="{StaticResource tabNormalBackground}" Margin="0,0,5,0" BorderBrush="Black" BorderThickness="0">
                                <ContentPresenter x:Name="ContentSite" TextElement.Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Property=Button.Content}" MinWidth="120" Margin="16,4,16,4" RecognizesAccessKey="True">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource tabSelectedBackground}" />
                                <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="Bold"/>
                                <Setter TargetName="ContentSite" Property="TextElement.FontSize" Value="14"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="GridSplitter">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="ShowsPreview" Value="True"/>
            <Setter Property="Width" Value="3"/>
        </Style>
    </Application.Resources>
    <JumpList.JumpList>
        <JumpList ShowRecentCategory="True"/>
    </JumpList.JumpList>
</Application>
