<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:common="clr-namespace:AutoTest.Core;assembly=AutoTest.Core"
             xmlns:data="clr-namespace:AutoTest.Data;assembly=AutoTest.Data"
             x:Class="AutoTest.UserControls.TestCaseUI" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{Binding Source={StaticResource {x:Static SystemColors.HighlightBrushKey}}, Path=Color}"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{Binding Source={StaticResource {x:Static SystemColors.HighlightTextBrushKey}}, Path=Color}"/>
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="Cut" CanExecute="cutCommand_CanExecute" Executed="cutCommand_Executed" />
        <CommandBinding Command="Copy" CanExecute="copyCommand_CanExecute" Executed="copyCommand_Executed" />
        <CommandBinding Command="Paste" CanExecute="pasteCommand_CanExecute" Executed="pasteCommand_Executed" />
        <CommandBinding Command="Delete" CanExecute="deleteCommand_CanExecute" Executed="deleteCommand_Executed" />
        <CommandBinding Command="common:UICommands.MoveUp" CanExecute="moveUpCommand_CanExecute" Executed="moveUpCommand_Executed" />
        <CommandBinding Command="common:UICommands.MoveDown" CanExecute="moveDownCommand_CanExecute" Executed="moveDownCommand_Executed" />
        <CommandBinding Command="common:UICommands.Lock" CanExecute="lock_CanExecute" Executed="lock_Executed" />
        <CommandBinding Command="common:UICommands.Unlock" CanExecute="unlock_CanExecute" Executed="unlock_Executed" />
    </UserControl.CommandBindings>
    <Grid>
        <TreeView x:Name="treeTestCase" DockPanel.Dock="Left" AllowDrop="True" TreeViewItem.Selected="treeView_ItemSelected" BorderThickness="0"
                  PreviewMouseDown="treeView_PreviewMouseDown"
                  PreviewMouseLeftButtonDown="treeView_PreviewMouseLeftButtonDown" 
                  PreviewMouseMove="treeView_PreviewMouseMove"
                  DragEnter="treeView_DragOver"
                  DragOver="treeView_DragOver"
                  Drop="treeView_Drop">
            <TreeView.Resources>
                <common:TestCaseConverter x:Key="testCaseConverter" />
                <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
                <common:BooleanToFontWeightConverter x:Key="booleanToFontWeightConverter" />
                <common:InvertBooleanToVisibilityConverter x:Key="invertBooleanToVisibilityConverter" />
                <HierarchicalDataTemplate DataType="{x:Type data:TestCase}" ItemsSource="{Binding Converter={StaticResource testCaseConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <Image Height="16" Source="{Binding StatusImage}" />
                        <TextBlock Margin="4" Text="{Binding Path=Title}" Visibility="{Binding IsEditting, Converter={StaticResource invertBooleanToVisibilityConverter}}" FontWeight="{Binding IsFunction, Converter={StaticResource booleanToFontWeightConverter}}"/>
                        <TextBox Padding="1,3" Visibility="{Binding IsEditting, Converter={StaticResource booleanToVisibilityConverter}}" IsVisibleChanged="editTextBox_IsVisibleChanged" />
                    </StackPanel>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type common:TestStepsWrapper}">
                    <DataGrid ItemsSource="{Binding Steps}"
                              AutoGenerateColumns="False" VirtualizingPanel.VirtualizationMode="Standard" SelectionUnit="FullRow" 
                              CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserAddRows="False"
                              GotFocus="stepsDataGrid_GotFocus" SelectedCellsChanged="stepsDataGrid_SelectedCellsChanged">
                        <DataGrid.CommandBindings>
                            <CommandBinding Command="Cut" CanExecute="dataGridCutCommand_CanExecute" Executed="dataGridCutCommand_Executed" />
                            <CommandBinding Command="Copy" CanExecute="dataGridCopyCommand_CanExecute" Executed="dataGridCopyCommand_Executed" />
                            <CommandBinding Command="Paste" CanExecute="dataGridPasteCommand_CanExecute" Executed="dataGridPasteCommand_Executed" />
                            <CommandBinding Command="common:UICommands.MoveUp" CanExecute="dataGridMoveUpCommand_CanExecute" Executed="dataGridMoveUpCommand_Executed" />
                            <CommandBinding Command="common:UICommands.MoveDown" CanExecute="dataGridMoveDownCommand_CanExecute" Executed="dataGridMoveDownCommand_Executed" />
                            <CommandBinding Command="common:UICommands.AddAction" CanExecute="dataGridAddAction_CanExecute" Executed="dataGridAddAction_Executed" />
                            <CommandBinding Command="common:UICommands.Lock" CanExecute="dataGridLock_CanExecute" Executed="dataGridLock_Executed" />
                            <CommandBinding Command="common:UICommands.Unlock" CanExecute="dataGridUnlock_CanExecute" Executed="dataGridUnlock_Executed" />
                        </DataGrid.CommandBindings>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Status" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Height="16" Source="{Binding StatusImage}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Action">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ToolTip="Select action" Margin="0" Padding="0" BorderThickness="0" MinWidth="100" DisplayMemberPath="Name" 
                                                  DataContext="{Binding}" ItemsSource="{Binding Source={StaticResource ActionList}}" 
                                                  SelectedValue="{Binding Action, Mode=OneWay}" SelectionChanged="cmbActions_SelectionChanged"></ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Title" Binding="{Binding Title}" MinWidth="200" />
                            <DataGridTextColumn Header="Before Running" IsReadOnly="True" Binding="{Binding BeforeRunningIndicator}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="After Running" IsReadOnly="True" Binding="{Binding AfterRunningIndicator}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static data:TestStatus.Executing}">
                                        <Setter Property="common:UIHelper.BringIntoView" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </DataTemplate>
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="common:UICommands.RunCurrentStep" Header="Run Current Step"/>
                    <MenuItem Command="common:UICommands.RunCurrentTestCase" Header="Run Current Test Case"/>
                    <MenuItem Header="Run From Current Step" IsEnabled="False"/>
                    <MenuItem Header="Run To Current Step" IsEnabled="False"/>
                    <Separator/>
                    <MenuItem ToolTip="Add test case" Header="Add Test Case" Command="common:UICommands.AddTestCase">
                        <MenuItem.Icon>
                            <Image Source="../Images/add.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem ToolTip="Add child test case" Header="Add Child Test Case" Command="common:UICommands.AddChildTestCase">
                        <MenuItem.Icon>
                            <Image Source="../Images/add_child.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <!--<ComboBox ToolTip="Select test-action to add" x:Name="cmbActions"></ComboBox>-->
                    <MenuItem ToolTip="Add action" Header="Add Action" Command="common:UICommands.AddAction">
                        <MenuItem.Icon>
                            <Image Source="../Images/addAction.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem ToolTip="Edit" Header="Edit" Command="common:UICommands.EditTestCase">
                        <MenuItem.Icon>
                            <Image Source="../Images/edit.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem ToolTip="Cut" Header="Cut" Command="Cut">
                        <MenuItem.Icon>
                            <Image Source="../Images/cut.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem ToolTip="Copy" Header="Copy" Command="Copy">
                        <MenuItem.Icon>
                            <Image Source="../Images/copy.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem ToolTip="Paste" Header="Paste" Command="Paste">
                        <MenuItem.Icon>
                            <Image Source="../Images/paste.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem ToolTip="Delete" Header="Delete" Command="Delete">
                        <MenuItem.Icon>
                            <Image Source="../Images/delete.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem ToolTip="Move Up" Header="Move Up" Command="common:UICommands.MoveUp">
                        <MenuItem.Icon>
                            <Image Source="../Images/arrow_up.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem ToolTip="Move Down" Header="Move Down" Command="common:UICommands.MoveDown">
                        <MenuItem.Icon>
                            <Image Source="../Images/arrow_down.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem ToolTip="Lock" Header="Lock" Command="common:UICommands.Lock">
                        <MenuItem.Icon>
                            <Image Source="../Images/lock.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem ToolTip="Unlock" Header="Unlock" Command="common:UICommands.Unlock">
                        <MenuItem.Icon>
                            <Image Source="../Images/lock_open.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>
    </Grid>
</UserControl>
